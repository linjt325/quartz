<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
                                         "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
<!-- name="commonSessionFactory" -->
 <session-factory >
<!--   <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property> -->
<!--   <property name="hibernate.connection.password">123456</property> -->
<!--   <property name="hibernate.connection.url">jdbc:mysql://localhost:3306/hibernate5</property> -->
  <property name="hibernate.connection.driver_class">com.microsoft.sqlserver.jdbc.SQLServerDriver</property>
  <property name="hibernate.connection.password">123456</property>
  <property name="hibernate.connection.url">jdbc:sqlserver://localhost:1433;;databaseName=Water_Patrol</property>
  <property name="hibernate.connection.username">sa</property>
  <!--         配置说是用数据库的方言 -->
<!--   <property name="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</property> -->
  <property name="hibernate.dialect">org.hibernate.dialect.SQLServer2008Dialect</property>
  <!--   显示数据库操作语句 -->
  <property name="hibernate.show_sql">true</property>
  <!--   格式化SQL语句 -->
  <property name="hibernate.format_sql">true</property>
  <!--   生成数据表的策略 -->
<!--   <property name="hibernate.hbm2ddl.auto">create</property> -->
<!--   <property name="hibernate.hbm2ddl.auto">update</property> -->
  <property name="hibernate.current_session_context_class">thread</property>
  
  <property name="hibernate.connection.provider_class">org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider</property>
  
  
<!--   对mysql 不起作用 -->
<!--   <property name="hibernate.jdbc.fetch_size">100</property> -->
  
<!--   <property name="hibernate.jdbc.batch_size">30</property> -->
  
  <!-- 配置使用二级缓存  默认情况下 对hql 和QBC 无效  有两种方法 -->
  <property name="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</property>
  <!-- 配置开启 查询缓存  -->
  <property name="hibernate.cache.use_query_cache">true</property>
  
  
  <!-- 配置C3p0数据源  -->
<property name="hibernate.c3p0.max_size">10</property>
<property name="hibernate.c3p0.min_size">5</property>
<property name="hibernate.c3p0.acquire_increment">2</property>
<property name="hibernate.c3p0.idle_test_period">1000</property>
<property name="hibernate.c3p0.max_statements">1000</property>
  <!--   需要关联的数据库对象映射文件 -->
<!--   <mapping resource="com/lin/hibernate_mapping/pojoMany2Many/single/Catagory.hbm.xml"/> -->
<!--   <mapping resource="com/lin/hibernate_mapping/pojoMany2Many/single/Item.hbm.xml"/> -->
<mapping resource="com/lin/hibernate_hql/pojo/Point.hbm.xml"/>
<mapping resource="com/lin/hibernate_hql/pojo/Device.hbm.xml"/>

<!--使用二级缓存的类和并发策略,也可以在  hbm.xml中进行配置-->
<class-cache usage="read-write" class="com.lin.hibernate_hql.pojo.Point"/>
<!-- 如果要缓存类中的集合 不光要对集合使用二级缓存-->
<collection-cache usage="read-write" collection="com.lin.hibernate_hql.pojo.Point.devices"/>
<!--  还要对集合的元素也使用二级缓存 ,否则会多出 n=集合中元素书数量    的sql语句 -->
<class-cache usage="read-write" class="com.lin.hibernate_hql.pojo.Device"/>

 </session-factory>
</hibernate-configuration>
